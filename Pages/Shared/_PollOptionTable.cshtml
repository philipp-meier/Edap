@model Edap.Shared._PollOptionTableModel

@{
    var pollOptionsOrdered = Model.Poll.Options.OrderBy(x => x.Date).ToArray();
    var maxVoteAmount = pollOptionsOrdered.Max(x => x.UserVotes.Count());
    var optionsWithMaxVotesAmount = pollOptionsOrdered.Where(x => x.UserVotes.Count() == maxVoteAmount).Count();
}
<div class="table-responsive">
    <table class="table">
        <thead>
            <th></th>
            @foreach (var pollOption in pollOptionsOrdered)
            {
                <th scope="col">
                    <div class="d-flex justify-content-center">
                        <div class="card mb-3 d-inline-block text-center border-secondary">
                            <div class="card-header">@pollOption.Date.ToString("MMM.").ToUpper()</div>
                            <div class="card-body text-dark">
                                <p class="card-text text-center">@pollOption.Date.ToString("ddd.").ToUpper()</p>
                                <h5 class="card-title text-center">@pollOption.Date.Day</h5>
                                @{
                                    var userVoteStyle = "";
                                    var userVotes = pollOption.UserVotes.Count();
                                    if (userVotes == maxVoteAmount && maxVoteAmount > 0)
                                    {
                                       userVoteStyle = optionsWithMaxVotesAmount == 1 ? "text-success" : "text-warning";
                                    }
                                    <p class="card-text text-center @userVoteStyle"><i class="bi bi-people-fill"></i> @pollOption.UserVotes.Count()</p>
                                }
                                @if (!Model.IsReadOnly && !Model.Poll.CloseDate.HasValue)
                                {
                                    <input class="card-text form-check-input" type="checkbox" name="SelectedPollOptionIds" value="@(pollOption.Id)" />
                                }
                            </div>
                        </div>
                    </div>
                </th>
            }
        </thead>
        <tbody>
            @foreach (var userVote in Model.Poll.UserVotes.OrderBy(x => x.Username))
            {
                <tr>
                    <td>@userVote.Username</td>
                    @foreach (var pollOption in pollOptionsOrdered)
                    {
                        var hasVoted = userVote.Options.Any(x => x == pollOption);
                        var tdStyle = hasVoted ? "table-success" : "table-warning";
                        <td class="text-center @tdStyle">
                            @if (hasVoted)
                            {
                                <i class="bi bi-check"></i>
                            }
                            else
                            {
                                <i class="bi bi-x"></i>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>