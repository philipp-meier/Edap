@page
@model Edap.Pages.Polls.CreateModel

@{
    ViewData["Title"] = "Create poll";
}

@section scripts{
    <partial name="_ValidationScriptsPartial" />
}

<h1>Create a poll</h1>

<form method="post">
    <div class="mb-4">
        <label asp-for="Poll.Title" class="block text-gray-700 text-sm font-bold mb-2"></label>
        <input type="text" asp-for="Poll.Title" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
        <span asp-validation-for="Poll.Title" class="text-danger"></span>
    </div>
    <div class="mb-4">
        <label asp-for="Poll.Description" class="block text-gray-700 text-sm font-bold mb-2"></label>
        <input type="text" asp-for="Poll.Description" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
        <span asp-validation-for="Poll.Description" class="text-danger"></span>
    </div>
    <div class="mb-4">
        <label asp-for="Poll.Location" class="block text-gray-700 text-sm font-bold mb-2"></label>
        <input type="text" asp-for="Poll.Location" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
        <span asp-validation-for="Poll.Location" class="text-danger"></span>
    </div>
    
    <h5>Add poll options</h5>
    <div class="mb-1">
        <label for="fromDate" class="block text-gray-700 text-sm font-bold mb-2">From</label>
        <input id="fromDate" type="date" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
    </div>
    <div class="mb-4">
        <label for="toDate" class="block text-gray-700 text-sm font-bold mb-2">To</label>
        <input id="toDate" type="date" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
    </div>
    <button type="button" onclick="addOptions()" class="mb-3 px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
        Add options
    </button>
    
    <h5>Poll options</h5>
    <div id="option-container" class="mb-5">
    </div>

    <button type="submit" class="px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Create</button>
    <partial name="_BackToListButton" />
</form>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const fromDateCtl = document.getElementById("fromDate");
        const toDateCtl = document.getElementById("toDate");
        
        // Set initial value
        const currentDate = new Date();
        fromDateCtl.valueAsDate = currentDate;
        toDateCtl.valueAsDate = currentDate;

        fromDateCtl.addEventListener("change", () => {
            const fromDate = fromDateCtl.valueAsDate;
            const toDate = toDateCtl.valueAsDate;

            if (toDate < fromDate)
                toDateCtl.value = fromDateCtl.value;
        });
    });
    
    function addOptions() {
        const fromDate = document.getElementById("fromDate").valueAsDate;
        const toDate = document.getElementById("toDate").valueAsDate;
        
        let existingValues = $("#option-container > div >  input")
            .map((_i, option) => option.valueAsDate.toString())
            .get();
        
        for (let currentDate = fromDate; currentDate <= toDate; currentDate.setDate(currentDate.getDate() + 1)) {
            if (!existingValues.includes(currentDate.toString()))
                addOption(currentDate);
        }
        
        reorderPollOptions();
    }

    function addOption(value) {
        const container = document.createElement("div");
        container.className = "poll-option d-flex mb-1";

        const input = document.createElement("input");
        input.className = "shadow appearance-none border rounded mr-2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline";
        input.name = "PollOptionDates";
        input.type = "date";
        input.valueAsDate = value;
        input.addEventListener("change", reorderPollOptions);
        container.append(input);

        const delButton = document.createElement("button");
        delButton.className = "px-3 py-2 text-sm font-medium text-center text-white bg-red-700 rounded-lg hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800";
        delButton.textContent = "Remove";
        delButton.type = "button";
        delButton.addEventListener("click", () => container.remove());
        container.append(delButton);
        
        document.getElementById("option-container").append(container);
    }
    
    function reorderPollOptions() {
        $("#option-container div").sort((a, b) => {
            const dateA = a.childNodes[0].valueAsDate;
            const dateB = b.childNodes[0].valueAsDate;

            return dateA - dateB;
        }).appendTo($("#option-container"));
    }
</script>